From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: lukas81298 <lukas81298@gommehd.net>
Date: Thu, 2 Dec 2021 13:46:26 +0100
Subject: [PATCH] configurable hopper transfer multiplier


diff --git a/src/main/java/net/minecraft/world/level/block/entity/Hopper.java b/src/main/java/net/minecraft/world/level/block/entity/Hopper.java
index a05acf709735b40ca86f978508c63a86065fd405..292895bf87538ae1474225d3df355918a88e79d4 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/Hopper.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/Hopper.java
@@ -19,4 +19,10 @@ public interface Hopper extends Container {
     double getLevelY();
 
     double getLevelZ();
+
+    // Cheetah start
+    default float getHopperTransferMultiplier() {
+        return 1.0F;
+    }
+    // Cheetah end
 }
diff --git a/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
index 789e5458f4a137694563a22612455506807de51b..fab1e367210cfa7225a307282c2f92af30fd6942 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/HopperBlockEntity.java
@@ -50,6 +50,7 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
     private NonNullList<ItemStack> items;
     private int cooldownTime;
     private long tickedGameTime;
+    private float hopperTransferMultiplier = 1.0F; // Cheetah
 
     // CraftBukkit start - add fields and methods
     public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
@@ -81,6 +82,16 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
     }
     // CraftBukkit end
 
+    // Cheetah start
+    public float getHopperTransferMultiplier() {
+        return hopperTransferMultiplier;
+    }
+
+    public void setHopperTransferMultiplier( float hopperTransferMultiplier ) {
+        this.hopperTransferMultiplier = hopperTransferMultiplier;
+    }
+    // Cheetah end
+
     public HopperBlockEntity(BlockPos pos, BlockState state) {
         super(BlockEntityType.HOPPER, pos, state);
         this.items = NonNullList.withSize(5, ItemStack.EMPTY);
@@ -96,6 +107,11 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
         }
 
         this.cooldownTime = nbt.getInt("TransferCooldown");
+        // Cheetah start
+        if(nbt.contains("TransferMultiplier")) {
+            this.hopperTransferMultiplier = nbt.getFloat( "TransferMultiplier");
+        }
+        // Cheetah end
     }
 
     @Override
@@ -106,6 +122,11 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
         }
 
         nbt.putInt("TransferCooldown", this.cooldownTime);
+        // Cheetah start
+        if(this.hopperTransferMultiplier != 1.0F) {
+            nbt.putFloat("TransferMultiplier", this.hopperTransferMultiplier);
+        }
+        // Cheetah end
     }
 
     @Override
@@ -210,7 +231,7 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
                         // ItemStack itemstack1 = addItem(iinventory, iinventory1, iinventory.removeItem(i, 1), enumdirection);
 
                         // CraftBukkit start - Call event when pushing items into other inventories
-                        CraftItemStack oitemstack = CraftItemStack.asCraftMirror(iinventory.removeItem(i, world.spigotConfig.hopperAmount)); // Spigot
+                        CraftItemStack oitemstack = CraftItemStack.asCraftMirror(iinventory.removeItem(i, (int) (world.spigotConfig.hopperAmount * hopper.hopperTransferMultiplier))); // Spigot
 
                         Inventory destinationInventory;
                         // Have to special case large chests as they work oddly
@@ -299,7 +320,7 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
             ItemStack itemstack1 = itemstack.copy();
             // ItemStack itemstack2 = addItem(iinventory, ihopper, iinventory.removeItem(i, 1), (EnumDirection) null);
             // CraftBukkit start - Call event on collection of items from inventories into the hopper
-            CraftItemStack oitemstack = CraftItemStack.asCraftMirror(iinventory.removeItem(i, world.spigotConfig.hopperAmount)); // Spigot
+            CraftItemStack oitemstack = CraftItemStack.asCraftMirror(iinventory.removeItem(i, (int) (world.spigotConfig.hopperAmount * ihopper.getHopperTransferMultiplier()))); // Spigot
 
             Inventory sourceInventory;
             // Have to special case large chests as they work oddly
diff --git a/src/main/java/org/bukkit/craftbukkit/block/CraftHopper.java b/src/main/java/org/bukkit/craftbukkit/block/CraftHopper.java
index 15e72d2e15106cd009eb19a839af0b67a48fadfd..af330add515cab837d8abef6dd0162a9ec51f7e3 100644
--- a/src/main/java/org/bukkit/craftbukkit/block/CraftHopper.java
+++ b/src/main/java/org/bukkit/craftbukkit/block/CraftHopper.java
@@ -25,4 +25,20 @@ public class CraftHopper extends CraftLootable<HopperBlockEntity> implements Hop
 
         return new CraftInventory(this.getTileEntity());
     }
+
+    // Cheetah start
+
+    @Override
+    public float getTransferMultiplier() {
+        return this.getTileEntity().getHopperTransferMultiplier();
+    }
+
+    @Override
+    public void setTransferMultiplier(float transferMultiplier) {
+        if(transferMultiplier < 0) {
+            throw new IllegalArgumentException("transferMultiplier cannot be negative for hopper at " + getLocation());
+        }
+        this.getTileEntity().setHopperTransferMultiplier(transferMultiplier);
+    }
+    // Cheetah end
 }
