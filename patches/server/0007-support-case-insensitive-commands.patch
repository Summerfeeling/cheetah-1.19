From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: lukas81298 <lukas81298@gommehd.net>
Date: Sun, 11 Dec 2022 19:52:20 +0100
Subject: [PATCH] =?UTF-8?q?support=20case=20insensitive=20commands=C3=82?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit


diff --git a/build.gradle.kts b/build.gradle.kts
index bbf1e0f4dd166104e62d08915de3c4a8c7542d31..ac18911747282de653c7f31ce9c4fd9b8716f147 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -9,7 +9,7 @@ plugins {
 dependencies {
     // Cheetah start
     implementation(project(":cheetah-api"))
-    implementation("io.papermc.paper:paper-mojangapi:1.19.2-R0.1-SNAPSHOT") {
+    implementation("io.papermc.paper:paper-mojangapi:1.19.3-R0.1-SNAPSHOT") {
         exclude("io.papermc.paper", "paper-api")
     }
     // Cheetah end
diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index 50d8d16b1856c0c875ccabbcfc240379a7669559..2412ad068f616302df7e206895bf7a59ed135e83 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -2312,10 +2312,21 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
         return map;
     }
 
+    // Cheetah start
+    private static String commandToLower(String command) {
+        if (command.isEmpty()) {
+            return command;
+        }
+        String[] split = command.split(" ");
+        split[0] = split[0].toLowerCase();
+        return String.join(" ", split);
+    }
+    // Cheetah end
+
     private ParseResults<CommandSourceStack> parseCommand(String command) {
         com.mojang.brigadier.CommandDispatcher<CommandSourceStack> com_mojang_brigadier_commanddispatcher = this.server.getCommands().getDispatcher();
 
-        return com_mojang_brigadier_commanddispatcher.parse(command, this.player.createCommandSourceStack());
+        return com_mojang_brigadier_commanddispatcher.parse(commandToLower(command), this.player.createCommandSourceStack()); // Cheetah - added commandToLower()
     }
 
     private Optional<LastSeenMessages> tryHandleChat(String message, Instant timestamp, LastSeenMessages.Update acknowledgment) {
diff --git a/src/main/java/org/bukkit/craftbukkit/command/VanillaCommandWrapper.java b/src/main/java/org/bukkit/craftbukkit/command/VanillaCommandWrapper.java
index 6035af2cf08353b3d3801220d8116d8611a0cd37..c7ecfd648142284c2f9884c0dfb5f35af2879c05 100644
--- a/src/main/java/org/bukkit/craftbukkit/command/VanillaCommandWrapper.java
+++ b/src/main/java/org/bukkit/craftbukkit/command/VanillaCommandWrapper.java
@@ -53,7 +53,7 @@ public final class VanillaCommandWrapper extends BukkitCommand {
         Validate.notNull(alias, "Alias cannot be null");
 
         CommandSourceStack icommandlistener = VanillaCommandWrapper.getListener(sender);
-        ParseResults<CommandSourceStack> parsed = this.dispatcher.getDispatcher().parse(this.toDispatcher(args, getName()), icommandlistener);
+        ParseResults<CommandSourceStack> parsed = this.dispatcher.getDispatcher().parse(this.toDispatcher(args, getName().toLowerCase()), icommandlistener); // Cheetah - added to lower case
 
         List<String> results = new ArrayList<>();
         this.dispatcher.getDispatcher().getCompletionSuggestions(parsed).thenAccept((suggestions) -> {
